Object subclass: #Counter	instanceVariableNames: 'value '	classVariableNames: ''	poolDictionaries: ''	category: 'Processes-Experiments'!!Counter methodsFor: 'initialization'!initialize	""	value := 0! !!Counter methodsFor: 'accessing'!increment	value := value + 1!value	^value!value: anInteger	value := anInteger.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Counter class	instanceVariableNames: ''!!Counter class methodsFor: 'instance creation'!new	^super new initialize! !Object subclass: #Philosoph	instanceVariableNames: 'process sem state id '	classVariableNames: 'Ids '	poolDictionaries: ''	category: 'Processes-Experiments'!!Philosoph methodsFor: 'accessing'!id	^id!process	^process!sem	^sem!state	^state! !!Philosoph methodsFor: 'initialization'!initialize	id := Ids +1.	Ids := Ids + 1.	sem := Semaphore new.	process := [|denkzeit denkDelay esszeit essDelay| 				[denkzeit :=  (Random new next  * 10000).				denkDelay := Delay forMilliseconds: denkzeit.				Transcript cr; show: 'Phil ', id printString, ' '; cr;				tab; show: 'ich denke jetzt für ', denkzeit printString , ' Millisekunden.'.				denkDelay wait.				esszeit := (Random new next  * 10000).				essDelay := Delay forMilliseconds: esszeit.				Transcript cr; show: 'Phil ', id printString, ' '; cr;				tab; show: 'ich esse jetzt für ', esszeit printString , ' Millisekunden.'.				essDelay wait.] repeat 			   ] newProcess.	state := 'denkend'.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Philosoph class	instanceVariableNames: ''!!Philosoph class methodsFor: 'instance creation'!new	^super new initialize! !!Philosoph class methodsFor: 'accessing'!resetIds	Ids := 0.! !Object subclass: #Philosophers	instanceVariableNames: 'philosophers '	classVariableNames: ''	poolDictionaries: ''	category: 'Processes-Experiments'!!Philosophers methodsFor: 'initialization'!initialize	"comment stating purpose of message"	philosophers := Array new:5.	Philosoph resetIds.	1 to: 5 do: [:i | philosophers at: i put: Philosoph new]! !!Philosophers methodsFor: 'accessing'!philosophers	""	^philosophers! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Philosophers class	instanceVariableNames: ''!!Philosophers class methodsFor: 'instance creation'!new	""	^super new initialize! !